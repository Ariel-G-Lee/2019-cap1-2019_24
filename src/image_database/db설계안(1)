

1. [Category]
Category 엔티티는 태그들이 속한 9개의 카테고리를 다룬다. 필요한 기능 및 요구사항은 다음과 같다.

	1) Category 엔티티에는 category name 애트리뷰트가 있으며 인물, 사물, 동물, 식물, 음식, 지역, 장소, 색깔, 기타 총 9개가 입력될 수 있다. (TEXT형)
	통계 및 분석 등의 기능을 구현할 때 불필요한 실수를 줄이고자 category ID 애트리뷰트를 만든다. (key)
	
	2) cagtegory ID 는 1부터 9까지의 자연수로 나타낸다. (INTEGER형)

	3) Category 엔티티는 [Object_Auto_tag], [Object_manual_tag], [Face_tag]와 category ID를 통해 관계를 맺는다. 


2. [Object_Auto_tag]
Object_Auto_tag 엔티티는 이미지속의 사물을 자동으로 인식하여 추출한 태그를 다룬다. 필요한 기능 및 요구사항은 다음과 같다.

	1) 자동 태그는 YOLO를 사용하여 구현하는데, YOLO는 wordnet에서 가져온 9419개의 (영어)단어를 사용하고 각 단어에는 n00000000 (명사를 뜻하는 n과 숫자 8개)와 같은 번호가 붙는다. 이 번호를 그대로 tag ID로 사용한다. (Key) (TEXT형)
	   
	2) English Tag 애트리뷰트에 자동 태그로 입력될 수 있는 9419개의 영어 단어와 각 단어가 속한 카테고리(category id)를 먼저 저장한다. 
중복된 단어가 있으므로 중복을 허용하고  id로 구별한다. 

	3) 사용자에게 한글 태그를 보여줄 것이므로 Korean Tag 애트리뷰트를 만들어서 YOLO에서 추출된 영어 단어를 데이터베이스의 English Tag 애트리뷰트에서 검색하고 같은 tag ID를 가진 한글 단어를 찾아서 보여준다. 
	
	4) 사용자의 이미지에 태그가 입력될 때마다 tagCount애트리뷰트 값이 하나 증가하고 사용자가 기존에 입력했던 태그를 삭제할 때 tagCount 애트리뷰트 값이 하나 감소한다. default값은 0이다.

	5) 자동으로 입력되는 태그가 최대한 사용자의 의도와 일치되도록 9419개의 단어 중 사용하지 않을 단어는 tagState 값을 0으로 갖고 사용하고 있는 단어는 tagState값을 1로 갖는다. 먼저 개발자의 판단에 따라 불필요한 단어는 default값을 0, 필요하다 생각되는 단어(약 3000개)는 default값을 1로한다.
	이후 사용자가 불필요하다 생각되는 단어는 태그되지 않게 하는 기능(자동 태그되는 단어 삭제 메뉴)을 만들어 그 단어의 tagState값을 0으로 바꾼다.
	그 중 다시 사용하고 싶은 단어는 tagState값을 1로 되돌릴 수 있게 한다.
		(-> 따라서 이미지 인식 결과 default값이 0인 단어가 추출될 경우 그 트리 노드를 따라서 상위 단어중 tagState값이 1인 가장 가까운 단어를 리턴한다. 
		    tagState값이 1인 상위 단어가 트리의 level 2까지 나오지 않을 경우 아무것도 리턴하지 않는다.)
	tagState값이 0인 태그는 태그 통계 및 네트워크 분석 기능에 포함되지 않는다. (BOOLEAN 형)

	6) [Category] 엔티티의 category ID를 참조한다. NULL값 

3. [Object_manual_tag]
Object_manual_tag 엔티티는 사용자가 직접 입력한 태그를 다룬다. 필요한 기능 및 요구사항은 다음과 같다.

	1) 수동 태그도 태그ID가 필요하므로 m00000000 (수동을 뜻하는 m과 숫자 8개)와 같이 만든다. (Key)
	   
	2) 사용자가 직접 태그를 입력할 경우 영어와 한글 태그가 가능하다. 자동 태그와 다르게 영어 태그와 한글 태그 애트리뷰트를 따로 만들지 않고 tag 애튜리뷰트만 만든다. (중복 불가, TEXT형)

	3) 사용자가 태그를 입력할 때 카테고리도 반드시 지정할 수 있게한다. [Category] 엔티티의 category ID를 참조한다.

	4) 사용자의 이미지에 태그가 입력될 때마다 해당 태그의 tagCount애트리뷰트 값이 하나 증가하고 사용자가 기존에 입력했던 태그를 삭제할 때 tagCount 애트리뷰트 값이 하나 감소한다. default값은 1이다.
	
	
4. [Face_tag] 
Face_tag 엔티티는 자동으로 이미지 속에서 사람의 얼굴을 찾은 후 사용자가 입력한 사람의 이름 태그를 다룬다. 

	1) 얼굴 태그의 tagID는 f00000000 (얼굴을 뜻하는 f와 숫자 8개)와 같이 만든다. (key)

	2) 사용자가 직접 태그를 입력할 경우 영어와 한글 태그가 가능하다. 자동 태그와 다르게 영어 태그와 한글 태그 애트리뷰트를 따로 만들지 않고 name 애트리뷰트만 만든다. (중복 불고 동명이인은 나중에 처리)

	3) 모든 태그의 카테고리는 인물이다. 따라서 따로 사용자에게 카테고리를 입력 받을 필요가 없이 categoryID 애트리뷰트는 인물로 지정한다. 
	   [category]엔티티의 category ID를 참조하고 default 값을 인물로 지정한다.

	3) 수동 태그와 마찬가지로 사용자의 이미지에 태그가 입력될 때마다 해당 태그의 tagCount애트리뷰트 값이 하나 증가하고 사용자가 기존에 입력했던 태그를 삭제할 때 tagCount 애트리뷰트 값이 하나 감소한다. default값은 1이다.


5. [Face_vector_value]
Face_vector_value 엔티티는 face recognize 프로세스를 거쳐 추출된 128개의 vector 값을 다룬다.

	1) vector id는 INTEGER형이며 1부터 입력된 순서대로 증가한다. (key)

	2) imageFileName 애트리뷰트에 얼굴이 인식된 해당 이미지 파일의 파일 명을 저장한다.  (TEXT 형)

	3) imageLeft, imageTop, imageRight, imageBottom 애트리뷰트에 얼굴이 인식된 이미지 안의 box값을 저장한다. (INTEGER형)

	4) vector 값은 vertor value 애트리뷰트에 저장된다. (BLOB형)

	5) faceName 애트리뷰트에 [Face_tag] 엔티티의 face ID 애트리뷰트를 참조하여 face clustering 프로세스를 거쳐 추출된 사람의 이름을 저장한다.
	 없을 경우는 null값을 허용한다.


6. [Images]
Images 엔티티는 사용자가 갖고있는 모든 이미지들과 이미지들의 정보를 다룬다.
이미지를 그대로 저장할 수도 있지만 속도가 느리고 db용량이 커지기 때문에 로컬 파일 시스템이 저장하고 경로를 db에 저장한다.
	
	
	1) imageID 애트리뷰트는 이미지 파일의 id값을 저장한다. 

	1) imageFileName 애트리뷰트에 이미지 파일명과 형식을 저장한다  (ex. img1.jpg) (key, TEXT형)
 	
	2) imageFilePath 애트리뷰트에 경로를 저장한다. (key, TEXT형)

	3) date, time, gpsLat, gpsLon 애트리뷰트에 이미지의 시간과 위치 정보를 저장한다. Null값을 허용한다.
	
	
7. [Tag_log]
Tag_log엔티티는 각 이미지에 달린 태그들을 저장한다. 께

	1) imageID 애티리뷰트에 이미지 파일 id값을 저장한다. [images]엔티티의 imageID 애트리뷰트를 참조한다.

	2) Tag NO 애트리뷰트는 각 이미지 파일에 담긴 태그의 번호를 저장한다. INTEGER형이며 이미지 파일 하나 당 1부터 20까지 입력된 순서대로 증가한다.
	Tag NO가 20이 되면 더 이상 태그를 저장하지 못한다. imageID와 함 다중키로 사용된다.

	3) autoTagID, manualTagID, faceTagID 애트리뷰트가 있으며 자동 태그로 지정된 태그 id는 autoTagID에, 수동 태그로 지정된 태그 id는 manualTagID에, 얼굴 태그로 지정된 태그 id는 faceTagID에 저장되고 각각은  [Object_auto_tag] [Object_manual_tag] [face_tag] 엔티티를 참조한다.
